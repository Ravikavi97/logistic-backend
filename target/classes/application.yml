spring:
  datasource:
    url: jdbc:postgresql://ec2-3-24-134-36.ap-southeast-2.compute.amazonaws.com:31579/postgres
    username: postgres
    password: Test_1user
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        # Configure second-level cache
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
          provider: org.ehcache.jsr107.EhcacheCachingProvider
          missing_cache_strategy: create
    # Enable batch processing
    jdbc:
      batch_size: 30
      fetch_size: 100
      
  # Redis configuration
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000
      # Make Redis optional in development
      client-type: lettuce
      connect-timeout: 2000
      # Disable Redis if not available
      repositories:
        enabled: false
      
  cache:
    type: caffeine  # Use Caffeine as fallback when Redis is not available
      
  # h2:
  #   console:
  #     enabled: true
  #     path: /h2-console
  profiles:
    active: dev # Set default profile to dev

jwt:
  secret: ${JWT_SECRET:your-secret-key-should-be-very-long-and-secure-in-production}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds

app:
  dev-secret-key: ${DEV_SECRET_KEY:your-dev-secret-key-for-admin-creation} # Development only

server:
  port: 8080
  # Enable compression
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
    min-response-size: 1024

logging:
  level:
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    com.logistics: TRACE